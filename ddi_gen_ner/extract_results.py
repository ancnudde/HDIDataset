"""
Use this script to parse results from the generation to valid json content.

The script generates two sets: one with the valid JSON content along with their
gold-sandard from the original dataset, the second with the unparsable generated
text for further analysis.
"""

import os
import re
import ast
import json


def open_result_file(filepath):
    with open(filepath, 'r') as fp:
        data = json.load(fp)['results']
    return data


def string_to_json(json_string):
    """
    Extracts formatted JSON from the text generated by LLM.
    """
    json_re = re.compile('\{(( )?("|\')' + "DRUGS" + '("|\'): .*)*\}')
    try:
        json_substring = json_re.search(json_string).group(0)
        return ast.literal_eval(json_substring)
    except Exception as e:
        print(e)
        return None


def results_set_to_json(results):
    parsed_content = []
    failed_content = []
    error_counter = {'parsable': 0, 'unparsable': 0}
    for result in results:
        generated_text, gold_standard = result[2]
        parsed_json = string_to_json(generated_text)
        if parsed_json:
            parsed_content.append((parsed_json, gold_standard))
        else:
            failed_content.append((generated_text, gold_standard))
    return parsed_content, failed_content


if __name__ == '__main__':
    data = open_result_file(
        'results/mistral/generation_system_shots=False.json')
    parsed, failed = results_set_to_json(data)
